<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
						   http://www.springframework.org/schema/beans 
						   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/tx 
						   http://www.springframework.org/schema/tx/spring-tx.xsd
						   http://www.springframework.org/schema/aop 
						   http://www.springframework.org/schema/aop/spring-aop.xsd
						   http://www.springframework.org/schema/context 
						   http://www.springframework.org/schema/context/spring-context.xsd">
						   
	
	<!-- 引入proerties文件,使用classpath下的文件，需要加前缀"classpath:" -->
    <context:property-placeholder location="classpath:dbinfo.properties"/>
	
	<!-- 配置数据源 -->   
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
	
	<bean name="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.current_session_context_clas">thread</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="mappingLocations" value="classpath:com/yumazhe/pojo/*.hbm.xml"></property>
	</bean>
	
<!-- 	<bean name="userDao" class="com.school.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="messageDao" class="com.school.dao.MessageDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="replyDao" class="com.school.dao.ReplyDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean name="userService" class="com.school.service.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
	</bean>
	<bean name="messageService" class="com.school.service.MessageServiceImpl">
		<property name="messageDao" ref="messageDao"></property>
	</bean>
	<bean name="replyService" class="com.school.service.ReplyServiceImpl">
		<property name="replyDao" ref="replyDao"></property>
	</bean> -->
	
<!-- 	事务管理器 
	<bean name="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	事务详情 ，进行具体事务设置
	<tx:advice id="userTxAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="register" />
			<tx:method name="nullify" />
			<tx:method name="modify" />
		</tx:attributes>
	</tx:advice> -->
	
	<!-- aop编程，自动代理UserServiceImpl类对象 -->
<!-- 	<aop:config>
		<aop:advisor advice-ref="userTxAdvice" pointcut="execution(* com.school.service.UserService.*(..))" />
		<aop:advisor advice-ref="messageTxAdvice" pointcut="execution(* com.school.service.MessageService.*(..))" />
		<aop:advisor advice-ref="replyTxAdvice" pointcut="execution(* com.school.service.ReplyService.*(..))" />
	</aop:config> -->
</beans>